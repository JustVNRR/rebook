@model Notification
@inject SignInManager<ApplicationUser> signInManager;
@inject UserManager<ApplicationUser> userManager

@{
    var user = await userManager.GetUserAsync(User);
    bool isFromUser = false;
    if (Model.FromUserId == user.Id) isFromUser = true;

}
<div class="p-4 mt-4 mb-4" style="box-shadow: 0px 0px 0.5em black; border-radius: 1em;">
    @if (isFromUser)
    {
        <div class="text-secondary p-3"><span class="font-weight-bold">@Model.ToUserName</span> has been notified that you agree to exchange <span class="font-weight-bold">@Model.FromCopyTitle</span> for <span class="font-weight-bold">@Model.ToCopyTitle</span>.</div>
    }
    else
    {
        <div class="text-secondary p-3"><span class="font-weight-bold">@Model.FromUserName</span> has been notified that you agree to exchange <span class="font-weight-bold">@Model.ToCopyTitle</span> for <span class="font-weight-bold">@Model.FromCopyTitle</span>.</div>
    }

    <div class="form-group row pl-2 pr-2">
        <div class="col">
            <a href="#" class="btn btn-success w-100" onclick="hideNotification(@Model.Id);">Ok</a>
        </div>
    </div>
</div>
